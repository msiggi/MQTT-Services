trigger:
- nugetrelease

pool:
  vmImage: windows-latest

variables:
#  project:  '**/MqttServices.Core.csproj'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core 7 sdk'
  inputs:
    packageType: 'sdk'
    version: '7.0.x'
    includePreviewVersions: false

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: |
      **/*.csproj
      !**/*WorkerService*.csproj

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build 
    projects: |
      **/*.csproj
      !**/*WorkerService*.csproj
    arguments: '--configuration $(BuildConfiguration)'

- task: NuGetCommand@2
  displayName: Pack
  inputs:
    command: 'pack'
    packageName: 'MQTT-Services'
    packagesToPack: '**/MqttServices.Core.csproj'
    versioningScheme: 'off'
    includeReferencedProjects: true
    includeSymbols: false
    nobuild: true
            
- task: NuGetCommand@2
  displayName: "nuget push nuget.org"
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Nuget.org'

#- task: NuGetCommand@2
#  displayName: "nuget push Artifactory"
#  inputs:
#    command: 'push'
#    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
#    nuGetFeedType: 'internal'
#    publishVstsFeed: '$(AzurApiKey)'

 